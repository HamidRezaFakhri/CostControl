@model CostControl.BusinessEntity.Models.CostControl.OverCost
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	var error = string.Empty;
}

@using (Html.BeginForm("AddOverCost", "OverCost", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitForm(this)" }))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal row">
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })

		<div class="form-group col col-md-6">
			<div class="form-group">
				@Html.LabelFor(model => model.SaleCostPointId, htmlAttributes: new { @class = "control-label col-md-12" })
				<div class="col-md-12">
					@Html.DropDownListFor(model => model.SaleCostPointId, ViewBag.SaleCostPoint as IEnumerable<SelectListItem>,
							"انتخاب کنید ...", htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.SaleCostPointId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-12">
					@Html.EditorFor(model => model.StartDate,
						new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group col col-md-6">
			<div class="form-group">
				@Html.LabelFor(model => model.OverCostTypeId, htmlAttributes: new { @class = "control-label col-md-12" })
				<div class="col-md-12">
					@Html.DropDownListFor(model => model.OverCostTypeId, ViewBag.OverCostType as IEnumerable<SelectListItem>,
							"انتخاب کنید ...", htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.OverCostTypeId, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-12">
					@Html.EditorFor(model => model.EndDate,
						new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group col col-md-12">
			<div class="form-group">
				@Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-12">
					@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control js-date" } })
					@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		<div class="form-group col col-md-12">
			<div class="form-group">
				@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-12">
					@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
				</div>
			</div>
		</div>

		@*<input type="text" class="js-date" maxlength="30" />*@

		<div id="errorContent" class="text-danger">

		</div>

		<div class="form-group col col-md-6">
			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<input type="submit" value="ثبت" class="btn btn-success" />
					<input id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal" value="انصراف" />
				</div>
			</div>
		</div>
	</div>
}

@section Scripts{
	<script>
		var input = document.querySelectorAll('.js-date')[0];
		//var input = $('#Price');

		var dateInputMask = function dateInputMask(elm) {
			elm.addEventListener('keypress', function (e) {
				if (e.keyCode < 47 || e.keyCode > 57) {
					e.preventDefault();
				}

				var len = elm.value.length;

				// If we're at a particular place, let the user type the slash
				// i.e., 12/12/1212
				if (len !== 1 || len !== 3) {
					if (e.keyCode == 47) {
						e.preventDefault();
					}
				}
				debugger;
				// If they don't add the slash, do it for them...
				if ((len + 1) % 4 === 0) {
					elm.value += ',';
				}

				// If they don't add the slash, do it for them...
				//if (len === 5) {
				//	elm.value += '/';
				//}
			});
		};

		dateInputMask(input);

		function displayErrorMessage(error) {
			$("#errorContent").html(error);
		}

		$('#StartDate').click(function () {
			PersianDatePicker.Show(this, '@System.DateTime.Now.Date.ToString("yyyy/MM/dd", new System.Globalization.CultureInfo("fa-IR"))');
		});

		$('#EndDate').click(function () {
			PersianDatePicker.Show(this, '@System.DateTime.Now.Date.ToString("yyyy/MM/dd", new System.Globalization.CultureInfo("fa-IR"))');
		});

		//dir="ltr"

		function SubmitForm(form) {
			$.ajax({
				type: "POST",
				url: form.action,
				data: $(form).serialize(),
				success: function (data) {
					if (data.success) {
						$('#apModal').modal('hide');
						getData('OverCostList', 'OverCost');
					} else {
						displayErrorMessage(data.message);
						return false;
					}
				}
			});

			return false;
		}
	</script>
}