@model CostControl.BusinessEntity.Models.CostControl.OverCost
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("AddOverCost", "OverCost", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.SaleCostPointId, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SaleCostPointId, ViewBag.SaleCostPoint as IEnumerable<SelectListItem>,
                        "انتخاب کنید ...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SaleCostPointId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OverCostTypeId, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OverCostTypeId, ViewBag.OverCostType as IEnumerable<SelectListItem>,
                        "انتخاب کنید ...", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OverCostTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="ثبت" class="btn btn-success" />
                <input id="btnCancel" type="button" class="btn btn-default" data-dismiss="modal" value="انصراف" />
            </div>
        </div>
    </div>
}

@section scripts{
    <script>
        function SubmitForm(form) {
            debugger;
            $.ajax({
                type: "POST",
                url: form.action,
                data: $(form).serialize(),
                success: function (data) {
                    debugger;
                    if (data.success) {
                        $('#apModal').modal('hide');
                        getData('OverCostList', 'OverCost');
                    } else {
                        return false;
                    }
                }
            });

            return false;
        }
    </script>
}